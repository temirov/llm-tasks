common:
  api:
    endpoint: https://api.openai.com/v1
    api_key_env: OPENAI_API_KEY
  logging:
    level: info      # debug|info|warn|error
    format: text     # text|json
  defaults:
    attempts: 3
    timeout_seconds: 45

models:
  - name: gpt-5-mini
    provider: openai
    model_id: gpt-5-mini
    default: true               # <- one default model
    supports_temperature: false # omit temperature for this model
    default_temperature: 1
    max_completion_tokens: 1500

  - name: gpt-5-pro
    provider: openai
    model_id: gpt-5-pro
    default: false
    supports_temperature: true
    default_temperature: 0.2
    max_completion_tokens: 2000

recipes:
  - name: sort
    enabled: true
    model: gpt-5-mini            # backref to models[].name
    grant:
      base_directories:
        downloads: "/media/share/Drive/exchange/Downloads"
        staging:   "/media/share/Drive/exchange/Downloads/_sorted"
      safety:
        dry_run: true
    projects:
      - name: "Projects_3D_Printing"
        target: "Projects/3D_Printing"
        keywords: ["3mf","stl","obj","mtl","bambu","bambulab","plate","nozzle","gcode"]
      - name: "Projects_Websites"
        target: "Projects/Websites"
        keywords: ["index.html","favicon","ico","svg","css","js","virtual-gallery","site.json","web","assets/js","assets/css"]
      - name: "Projects_Codebases"
        target: "Projects/Codebases"
        keywords: ["go.mod","go.sum","cmd/","internal/","package.json","cargo.toml","build.gradle","source","pipeline"]
      - name: "Resources_AI_Art"
        target: "Resources/AI_Art"
        keywords: ["dall·e","forprint","poster","gemini_generated","webp","png","concept_art","digital_art"]
      - name: "Resources_Datasets"
        target: "Resources/Datasets"
        keywords: ["csv","dataset","ghcnd","lcd","sales_tax","zip_locale","data.csv","jsonl"]
      - name: "Knowledge_Documentation"
        target: "Knowledge/Documentation"
        keywords: ["readme","docs","guide","manual","notes","tutorial","explanation","journal","meeting"]
    thresholds:
      min_confidence: 0.6

  - name: changelog
    enabled: true
    model: gpt-5-mini
    inputs:
      version:
        required: true
        env: CHANGELOG_VERSION
        default: ""
      date:
        required: true
        env: CHANGELOG_DATE
        default: ""
      git_log:
        required: true
        source: stdin
    recipe:
      system: |
        Do not invent items. Group under: Highlights, Features ✨, Improvements ⚙️,
        Docs 📚, CI & Maintenance, and an Upgrade notes line. Keep bullets concise,
        include PR numbers and SHAs if present. Output valid Markdown only.
      format:
        heading: "## [${version}] - ${date}"
        sections:
          - title: "Highlights"
            min: 1
            max: 3
          - title: "Features ✨"
          - title: "Improvements ⚙️"
          - title: "Docs 📚"
          - title: "CI & Maintenance"
        footer: "**Upgrade notes:** No breaking changes."
      rules:
        - "Only use information present in the git log."
        - "Preserve PR numbers and short SHAs in parentheses if present."
        - "Prefer user-facing value in Highlights; keep 1–3 bullets."
        - "No placeholders, no commentary, no extra prose."
    apply:
      output_path: "./CHANGELOG.md"
      mode: "prepend"           # prepend|print
      ensure_blank_line: true
